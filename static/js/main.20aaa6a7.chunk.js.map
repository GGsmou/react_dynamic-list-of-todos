{"version":3,"sources":["types/FilterSelect.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterSelect","TodoList","todos","selectedTodo","toSelectTodo","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","filterSelect","filterTitle","onFilterSelectChange","onFilterTitleChange","value","onChange","event","target","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","ok","Error","status","statusText","json","TodoModal","onClose","React","useState","user","setUser","isLoading","setIsLoading","error","setError","useEffect","userId","data","catch","err","message","finally","showUser","showEmpty","showError","href","email","name","App","setTodos","setSelectedTodo","setFilterSelect","setFilterTitle","filteredTodos","todosToFilter","filterToApply","newTodos","filter","trim","toLowerCase","includes","toLocaleLowerCase","filterTodos","showTodos","length","showModal","newFilterSelect","newFilterTitle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20aaa6a7.chunk.js","sourcesContent":["export enum FilterSelect {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  toSelectTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  toSelectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n\n          {todo.completed ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          ) : (\n            <td className=\"is-vcentered\" />\n          )}\n\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={cn({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => toSelectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={cn('far', {\n                    'fa-eye-slash': selectedTodo?.id === todo.id,\n                    'fa-eye': selectedTodo?.id !== todo.id,\n                  })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { FilterSelect } from '../../types/FilterSelect';\n\ntype Props = {\n  filterSelect: FilterSelect\n  filterTitle: string\n  onFilterSelectChange: (filterSelect: FilterSelect) => void\n  onFilterTitleChange: (filterTitle: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterSelect,\n  filterTitle,\n  onFilterSelectChange,\n  onFilterTitleChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterSelect}\n          onChange={(event) => onFilterSelectChange(\n            event.target.value as FilterSelect,\n          )}\n        >\n          <option value={FilterSelect.All}>All</option>\n          <option value={FilterSelect.Active}>Active</option>\n          <option value={FilterSelect.Completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={filterTitle}\n        onChange={(event) => onFilterTitleChange(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {filterTitle !== '' && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onFilterTitleChange('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status}, ${res.statusText}`);\n      }\n\n      return res.json();\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onClose,\n}) => {\n  const [user, setUser] = React.useState<User | null>(null);\n  const [isLoading, setIsLoading] = React.useState<boolean>(true);\n  const [error, setError] = React.useState<string>('');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getUser(todo.userId)\n      .then((data) => {\n        setError('');\n        setUser(data);\n      })\n      .catch((err) => {\n        setError(err.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [todo.userId]);\n\n  const showUser = !isLoading && error === '' && user !== null;\n  const showEmpty = !isLoading && error === '' && user === null;\n  const showError = !isLoading && error !== '';\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              {showUser && (\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              )}\n\n              {showEmpty && (\n                <p>User not found</p>\n              )}\n\n              {showError && (\n                <p className=\"has-text-danger\">\n                  {error}\n                </p>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { FilterSelect } from './types/FilterSelect';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = React.useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [error, setError] = React.useState<string>('');\n\n  const [selectedTodo, setSelectedTodo] = React.useState<Todo | null>(null);\n\n  const [filterSelect, setFilterSelect] = React.useState<FilterSelect>(FilterSelect.All);\n  const [filterTitle, setFilterTitle] = React.useState<string>('');\n\n  const filterTodos = (\n    todosToFilter: Todo[],\n    filterToApply: [FilterSelect, string],\n  ) => {\n    let newTodos = [...todosToFilter];\n\n    newTodos = newTodos.filter((todo) => {\n      switch (filterToApply[0]) {\n        case FilterSelect.Active:\n          return !todo.completed;\n\n        case FilterSelect.Completed:\n          return todo.completed;\n\n        default:\n          return true;\n      }\n    });\n\n    newTodos = newTodos.filter((todo) => todo.title.trim().toLowerCase()\n      .includes(filterToApply[1].trim().toLocaleLowerCase()));\n\n    return newTodos;\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then((data) => {\n        setError('');\n        setTodos(data);\n      })\n      .catch((err) => {\n        setError(err.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const filteredTodos = filterTodos(todos, [filterSelect, filterTitle]);\n\n  const showTodos = !isLoading && error === '' && todos.length > 0;\n  const showEmpty = !isLoading && error === '' && todos.length === 0;\n  const showError = !isLoading && error !== '';\n  const showModal = selectedTodo !== null;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterSelect={filterSelect}\n                filterTitle={filterTitle}\n                onFilterSelectChange={(newFilterSelect: FilterSelect) => setFilterSelect(newFilterSelect)}\n                onFilterTitleChange={(newFilterTitle: string) => setFilterTitle(newFilterTitle)}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n\n              {showTodos && (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  toSelectTodo={(todo) => setSelectedTodo(todo)}\n                />\n              )}\n\n              {showEmpty && (\n                <p className=\"has-text-centered\">No todos found.</p>\n              )}\n\n              {showError && (\n                <p className=\"has-text-centered has-text-danger\">\n                  {error}\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}